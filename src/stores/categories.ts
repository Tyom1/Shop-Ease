import axios from 'axios'
import { defineStore } from 'pinia'

interface Categories {
  id: number
  name: string
  autogeneratedSlug: string
  hdThumbnailUrl: string
  parentId: number
}

interface Category {
  id: number
  name: string
  autogeneratedSlug: string
  hdThumbnailUrl: string
}

export const useCategoriesStore = defineStore({
  id: 'categories',
  state: () => ({
    categories: [] as Categories[],
    category: [] as Category[]
  }),
  actions: {
    async getCategories() {
      const STOREID = import.meta.env.VITE_STOREID
      const TOKEN = import.meta.env.VITE_TOKEN

      const requestURL = `https://app.ecwid.com/api/v3/${STOREID}/categories`

      try {
        const response = await axios.get(requestURL, {
          headers: {
            Authorization: TOKEN
          }
        })
        this.categories = response.data.items
      } catch (error) {
        console.error('Error:', error)
      }
    },
    async getCategory(categoryId: number) {
      const STOREID = import.meta.env.VITE_STOREID
      const TOKEN = import.meta.env.VITE_TOKEN

      const requestURL = `https://app.ecwid.com/api/v3/${STOREID}/categories/${categoryId}`

      try {
        const response = await axios.get(requestURL, {
          headers: {
            Authorization: TOKEN
          }
        })
        this.category = response.data
      } catch (error) {
        console.error('Error:', error)
      }
    }
  }
})
